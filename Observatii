====================
   Curatare date
====================

Case eliminate cu 30 zile consecutive cu 0 consum: {2000925}
Case eliminate cu mai putin de un an de date: [2000902, 2000981, 2000993]
62 case eliminate care nu au valori pentru radiatie la statia meteo.
634 randuri eliminate din Appliance.csv.
33676139 randuri eliminate din Consumption.csv.
32 statii meteo eliminate din WeatherStation.csv.
3855724 randuri eliminate din WeatherData.csv.
160 randuri eliminate din Record.csv.
Numar total de spike-uri normalizate: 375794
Au fost corectate 16308 valori negative din WeatherData.

====================
     Indicatori
====================

Pentru consum am luat unitatile de masura astfel:
- In baza de date originala: W/10min
- Am transformat in kWh impartind la 6 * 1000.

SS: Procentul din consum care este acoperit de productia proprie
SC: Procentul din productia proprie care este consumata local (nu exportata in retea)
NEEG: Energia neta schimbata cu reteaua: diferenta dintre energia exportata si cea importata
NPV: Profitul pe un interval de timp mare

Maximizam SS si SC in acelasi timp:
- SS creste => SC scade
- SC creste => SS scade
- Cu cat avem mai multe panouri solare, cu atat creste SS si scade SC

====================
    Bibliografie
====================
DE: https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.differential_evolution.html
Data smoothing (Moving average): https://www.sigmacomputing.com/blog/data-smoothing-cleaning
Pandas: https://pandas.pydata.org/docs/
Lucrarea cu time in python: https://pandas.pydata.org/docs/user_guide/timeseries.html
Gruparea dataframe-urilor: https://realpython.com/pandas-groupby/
Informatii despre preturi si electricitate Franta:
https://en.selectra.info/energy-france/guides/electricity/tariffs
https://kwhprice.eu/en/france/2025
Plotly: https://plotly.com/python/
Numpy: https://numpy.org/doc/2.3/

"Python for Data Analysis", Wes McKinney
https://www.researchgate.net/publication/378204172_Introduction_to_Pandas
https://www.researchgate.net/publication/393636871_A_Standardized_Threshold_Approach_for_Outlier_Detection_Using_Python_Algorithms
https://www.researchgate.net/publication/382865909_GroupBy_Tutorial

=====================
  Caiet de practica
=====================
1. Iunie 23 - Iunie 29
Analiza datelor si identificarea erorilor din baza de date. Am creat structura proiectului si am proiectat functiile pentru preprocesarea datelor, incluzand eliminarea anomaliilor si corectarea valorilor incorecte.

2. Iunie 30- Iulie 6
Finalizarea functiilor de corectare a anomaliilor din datele de consum. Am implementat si functii de vizualizare a consumului pentru o casa, sub forma de grafice: pe ora intr-o zi, pe intervale de 10 minute intr-o zi, pe zile pe parcursul unui an si pe ora pentru un anumit aparat din casa intr-o zi.

3. Iulie 7 - Iulie 13
Restructurarea codului pentru a fi mai clar si mai usor de inteles. Am reorganizat proiectul pentru a folosi programarea orientata pe obiecte, grupand functionalitatile in clase si module specifice.

4. Iulie 14 - Iulie 20
Am procesat datele de consum si radiatia solara, organizandu-le in dictionare asociate clasei. Am implementat calculul estimativ al puterii produse pe baza radiatiei, astfel incat atat puterea consumata, radiatia solara, cat si puterea produsa sunt stocate ca dictionare in interiorul clasei.

5. Iulie 21 - Iulie 27
Analiza datelor energetice si implementarea functiilor pentru calculul indicatorilor: self-sufficiency (SS), self-consumption (SC), net exchanged energy with the grid (NEEG) si net present value (NPV).

6. Iulie 28 - August 3
Testarea si validarea functiilor pentru indicatorii energetici. Am verificat corectitudinea calculelor pentru SS, SC, NEEG si NPV pe mai multe seturi de date.

7. August 4 - August 10
Implementarea unei functii de optimizare a performantelor energetice ale unei case, avand ca obiectiv maximizarea indicatorilor SS, SC sau minimizarea NEEG. Am inceput testarea mai multor combinatii de parametri pentru a identifica configuratia optima.

8. August 11 - August 17

9. August 18 - August 24

10. August 25 - August 31
